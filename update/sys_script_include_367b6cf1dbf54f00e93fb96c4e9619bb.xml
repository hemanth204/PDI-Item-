<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_rtp_sv_pdi.u_PDI_Grp_SubGrp_Size_Brand_Manufacturer</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>u_PDI_Grp_SubGrp_Size_Brand_Manufacturer</name>
        <script><![CDATA[var u_PDI_Grp_SubGrp_Size_Brand_Manufacturer = Class.create();
u_PDI_Grp_SubGrp_Size_Brand_Manufacturer.prototype = {
    initialize: function() {
    },
	u_popPDIGroup:function() {
		var gp = ' ';
		var a = current.pdi_category;
		var grp = new GlideRecord('x_rtp_sv_pdi_pdi_category_and_group_matrix');
		grp.addQuery('category',a);
		grp.query();
		while(grp.next()) {
			if (gp.length > 0) {
				//build a comma separated string of groups if there is more than one
				gp += (',' + grp.group.toString());
			}
			else {
				gp = grp.group.toString();
			}
		}
		// return Groups where assigned to is in those groups we use IN for lists
		return 'sys_idIN' + gp;
	},
	u_popPDIsubGroup:function() {
		var gp = ' ';
		var a = current.pdi_group;
		var grp = new GlideRecord('x_rtp_sv_pdi_pdi_category_and_group_matrix');
		grp.addQuery('group',a);
		grp.query();
		//gs.info("Group::::"+a);
		while(grp.next()) {
			if (gp.length > 0) {
				//build a comma separated string of groups if there is more than one
				gp += (',' + grp.subgroup.toString());
			}
			else {
				gp = grp.subgroup.toString();
			}
		}
		// return Groups where assigned to is in those groups we use IN for lists
		return 'sys_idIN' + gp;
	},
	u_popPDIManufacturer:function() {
		var gp = ' ';
		var a = current.product_brand;
		var grp = new GlideRecord('x_rtp_sv_pdi_pdi_category_and_group_matrix');
		grp.addQuery('brand',a);
		grp.query();
		while(grp.next()) {
			if (gp.length > 0) {
				//build a comma separated string of groups if there is more than one
				gp += (',' + grp.manufacturer.toString());
			}
			else {
				gp = grp.manufacturer.toString();
			}
		}
		// return Groups where assigned to is in those groups we use IN for lists
		return 'sys_idIN' + gp;
	},
	u_popPDISize:function() {
		var gp = ' ';
		var a = current.pdi_subgroup;
		var grp = new GlideRecord('x_rtp_sv_pdi_pdi_category_and_group_matrix');
		grp.addQuery('subgroup',a);
		grp.query();
		while(grp.next()) {
			if (gp.length > 0) {
				//build a comma separated string of groups if there is more than one
				gp += (',' + grp.size.toString());
			}
			else {
				gp = grp.size.toString();
			}
		}
		// return Groups where assigned to is in those groups we use IN for lists
		return 'sys_idIN' + gp;
	},
u_popPDIBrand:function() {
		var gp = ' ';
		var a = current.product_size;
		var grp = new GlideRecord('x_rtp_sv_pdi_pdi_category_and_group_matrix');
		grp.addQuery('size',a);
		grp.query();
		while(grp.next()) {
			if (gp.length > 0) {
				//build a comma separated string of groups if there is more than one
				gp += (',' + grp.brand.toString());
			}
			else {
				gp = grp.brand.toString();
			}
		}
		// return Groups where assigned to is in those groups we use IN for lists
		return 'sys_idIN' + gp;
	},
	u_popPDIBrandShipper:function(){
		var gp = ' ';
		var a = current.pdi_subgroup;
		var grp = new GlideRecord('x_rtp_sv_pdi_pdi_category_and_group_matrix');
		grp.addQuery('subgroup',a);
		grp.query();
		while(grp.next()) {
			if (gp.length > 0) {
				//build a comma separated string of groups if there is more than one
				gp += (',' + grp.brand.toString());
			}
			else {
				gp = grp.brand.toString();
			}
		}
		// return Groups where assigned to is in those groups we use IN for lists
		return 'sys_idIN' + gp;
	},
	u_popVendor:function(){
		var gp = ' ';
		var a = current.pdi_subgroup;
		var grp = new GlideRecord('x_rtp_sv_pdi_pdi_category_and_group_matrix');
		grp.addQuery('subgroup',a);
		grp.query();
		while(grp.next()) {
			if (gp.length > 0) {
				//build a comma separated string of groups if there is more than one
				gp += (',' + grp.vendor_description.toString());
			}
			else {
				gp = grp.vendor_description.toString();
			}
		}
		// return Groups where assigned to is in those groups we use IN for lists
		return 'sys_idIN' + gp;
	},
	

    type: 'u_PDI_Grp_SubGrp_Size_Brand_Manufacturer'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>v-hemanthsiramdasu</sys_created_by>
        <sys_created_on>2017-10-14 15:47:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>367b6cf1dbf54f00e93fb96c4e9619bb</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>u_PDI_Grp_SubGrp_Size_Brand_Manufacturer</sys_name>
        <sys_package display_value="PDI Item Management" source="x_rtp_sv_pdi">6b04b582dbc88740e93fb96c4e9619db</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="PDI Item Management">6b04b582dbc88740e93fb96c4e9619db</sys_scope>
        <sys_update_name>sys_script_include_367b6cf1dbf54f00e93fb96c4e9619bb</sys_update_name>
        <sys_updated_by>v-hemanthsiramdasu</sys_updated_by>
        <sys_updated_on>2017-12-11 13:13:17</sys_updated_on>
    </sys_script_include>
</record_update>
